<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk.Web">
	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		<RootNamespace>ContactdocIO.WebUI</RootNamespace>
		<AssemblyName>ContactdocIO.WebUI</AssemblyName>
		<Nullable>enable</Nullable>
		<IsPackable>true</IsPackable>
		<SpaRoot>contactdocio-web\</SpaRoot>
        <!-- <SpaProxyServerUrl>http://localhost:3000</SpaProxyServerUrl> -->
	    <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
		<ImplicitUsings>enable</ImplicitUsings>
		<UserSecretsId>efad71c6-743c-4b87-9de8-f26d77146f6d</UserSecretsId>
	</PropertyGroup>
	<ItemGroup>
		<ProjectReference Include="..\Application\Application.csproj" />
		<ProjectReference Include="..\Infrastructure\Infrastructure.csproj" />
	</ItemGroup>
	<ItemGroup>
		<PackageReference Include="FluentValidation.AspNetCore" Version="10.3.4" />
		<PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="6.0.10" />
		<PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="6.0.10" />
		<PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="6.0.5" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.10" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="6.0.10" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="6.0.10">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.EntityFrameworkCore" Version="6.0.5" />
		<PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="6.0.10" />
		<PackageReference Include="NSwag.AspNetCore" Version="13.17.0" />
		<PackageReference Include="NSwag.MSBuild" Version="13.17.0">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="6.0.10">
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
			<PrivateAssets>all</PrivateAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.AspNetCore.Authentication.Google" Version="6.0.10" />
	</ItemGroup>
	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<None Remove="$(SpaRoot)**" />
		<None Remove="Microsoft.EntityFrameworkCore.Design" />
		<None Remove="Microsoft.AspNetCore.Authentication.Google" />
	</ItemGroup>
	<ItemGroup>
		<None Include="contactdocio-web\.eslintrc.json" />
		<None Include="contactdocio-web\.gitignore" />
		<None Include="contactdocio-web\package-lock.json" />
		<None Include="contactdocio-web\package.json" />
		<None Include="contactdocio-web\README.md" />
		<None Include="contactdocio-web\tsconfig.json" />
	</ItemGroup>
	<PropertyGroup>
		<RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
	</PropertyGroup>
	<Target Name="NSwag" AfterTargets="PostBuildEvent" Condition=" '$(Configuration)' == 'Debug' ">
		<Exec Command="$(NSwagExe_Net60) run nswag.json /variables:Configuration=$(Configuration)" />
	</Target>
	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>
	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />
		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>
</Project>